<%= form_with model: post, local: true do |form| %>
  <% if post.errors.any? %>
    <div class="bg-red-50 border-l-4 border-red-400 p-4 mb-6">
      <div class="flex">
        <div class="ml-3">
          <h3 class="text-sm font-medium text-red-800">
            There were <%= pluralize(post.errors.count, "error") %> with your submission
          </h3>
          <div class="mt-2 text-sm text-red-700">
            <ul class="list-disc list-inside">
              <% post.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        </div>
      </div>
    </div>
  <% end %>

  <div class="space-y-6">
    <div>
      <%= form.label :title, class: "block text-sm font-medium text-gray-700 mb-2" %>
      <%= form.text_field :title, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500", placeholder: "Enter a descriptive title" %>
    </div>

    <div>
      <%= form.label :category_id, "Category", class: "block text-sm font-medium text-gray-700 mb-2" %>
      <%= form.select :category_id, options_for_select(Category.ordered.pluck(:name, :id), post.category_id), { prompt: "Select a category" }, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500" %>
    </div>

    <div>
      <p class="text-sm font-medium text-gray-700 mb-2">Post Type</p>
      <div class="space-y-4">
        <label class="flex items-start">
          <%= radio_button_tag 'content_type', 'article', post.article? || post.new_record?, class: "mt-1 mr-2", data: { action: "change->content-form#toggleContentType" } %>
          <div>
            <span class="font-medium">Article</span>
            <p class="text-sm text-gray-500">Write original content with markdown support</p>
          </div>
        </label>
        <label class="flex items-start">
          <%= radio_button_tag 'content_type', 'link', post.link?, class: "mt-1 mr-2", data: { action: "change->content-form#toggleContentType" } %>
          <div>
            <span class="font-medium">External Link</span>
            <p class="text-sm text-gray-500">Share a link to external content</p>
          </div>
        </label>
      </div>
    </div>

    <div id="article-fields" class="<%= 'hidden' if post.link? %>" data-controller="markdown-preview">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
        <div>
          <div class="flex items-center justify-between mb-2">
            <%= form.label :content, "Content (Markdown supported)", class: "block text-sm font-medium text-gray-700" %>
            <button type="button" class="lg:hidden text-sm text-red-600 hover:text-red-800" data-action="click->markdown-preview#togglePreview">
              Toggle Preview
            </button>
          </div>
          <%= form.text_area :content, rows: 20, 
              class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 font-mono text-sm", 
              placeholder: "Write your content here...",
              data: { 
                "markdown-preview-target": "input",
                "action": "input->markdown-preview#updatePreview"
              } %>
        </div>
        
        <div class="hidden lg:block" data-markdown-preview-target="previewContainer">
          <h4 class="text-sm font-medium text-gray-700 mb-2">Preview</h4>
          <div class="prose prose-sm max-w-none border border-gray-300 rounded-md p-4 bg-white overflow-y-auto" data-markdown-preview-target="preview">
            <p class="text-gray-500">Preview will appear here as you type...</p>
          </div>
        </div>
      </div>
      <p class="mt-2 text-sm text-gray-500">You can use Markdown formatting. Code blocks are supported with syntax highlighting.</p>
    </div>

    <div id="link-fields" class="<%= 'hidden' unless post.link? %>">
      <%= form.label :url, "URL", class: "block text-sm font-medium text-gray-700 mb-2" %>
      <%= form.text_field :url, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500", placeholder: "https://example.com/article" %>
    </div>

    <div>
      <%= form.label :title_image_url, "Title Image URL (optional)", class: "block text-sm font-medium text-gray-700 mb-2" %>
      <%= form.text_field :title_image_url, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500", placeholder: "https://example.com/image.jpg" %>
    </div>

    <div>
      <%= form.label :tag_ids, "Tags", class: "block text-sm font-medium text-gray-700 mb-2" %>
      <div class="grid grid-cols-2 md:grid-cols-4 gap-2">
        <%= form.collection_check_boxes :tag_ids, Tag.active, :id, :name do |b| %>
          <label class="flex items-center space-x-2">
            <%= b.check_box(class: "rounded border-gray-300 text-red-600 focus:ring-red-500") %>
            <span class="text-sm"><%= b.text %></span>
          </label>
        <% end %>
      </div>
    </div>

    <div>
      <label class="flex items-center space-x-2">
        <%= form.check_box :published, class: "rounded border-gray-300 text-red-600 focus:ring-red-500" %>
        <span class="text-sm font-medium text-gray-700">Publish immediately</span>
      </label>
      <p class="mt-1 text-sm text-gray-500">If unchecked, content will be saved as a draft</p>
    </div>

    <div class="flex justify-end space-x-4">
      <%= link_to "Cancel", posts_path, class: "px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50" %>
      <%= form.submit post.new_record? ? "Create Post" : "Update Post", class: "px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 cursor-pointer" %>
    </div>
  </div>
<% end %>

<script>
  // Simple JavaScript to toggle between article and link fields
  document.addEventListener('DOMContentLoaded', function() {
    const articleRadio = document.querySelector('input[value="article"]');
    const linkRadio = document.querySelector('input[value="link"]');
    const articleFields = document.getElementById('article-fields');
    const linkFields = document.getElementById('link-fields');
    
    function toggleFields() {
      if (articleRadio.checked) {
        articleFields.classList.remove('hidden');
        linkFields.classList.add('hidden');
      } else {
        articleFields.classList.add('hidden');
        linkFields.classList.remove('hidden');
      }
    }
    
    articleRadio.addEventListener('change', toggleFields);
    linkRadio.addEventListener('change', toggleFields);
  });
</script> 